public abstract interface class org/partiql/plan/v1/PartiQLPlan {
	public abstract fun getStatement ()Lorg/partiql/plan/v1/Statement;
}

public abstract interface class org/partiql/plan/v1/Schema {
	public abstract fun getField (Ljava/lang/String;)Lorg/partiql/types/Field;
	public abstract fun getFields ()Ljava/util/List;
	public abstract fun getSize ()I
}

public final class org/partiql/plan/v1/Schema$DefaultImpls {
	public static fun getSize (Lorg/partiql/plan/v1/Schema;)I
}

public abstract interface class org/partiql/plan/v1/Statement {
}

public abstract interface class org/partiql/plan/v1/Statement$Query : org/partiql/plan/v1/Statement {
	public abstract fun getRoot ()Lorg/partiql/plan/v1/operator/rex/Rex;
}

public abstract interface class org/partiql/plan/v1/Version {
	public abstract fun toString ()Ljava/lang/String;
}

public abstract interface class org/partiql/plan/v1/builder/PlanFactory {
	public static final field Companion Lorg/partiql/plan/v1/builder/PlanFactory$Companion;
	public static fun getSTANDARD ()Lorg/partiql/plan/v1/builder/PlanFactory;
	public abstract fun relAggregate (Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelAggregate;
	public abstract fun relAggregateCall (Lorg/partiql/spi/function/Aggregation;Ljava/util/List;Z)Lorg/partiql/plan/v1/operator/rel/RelAggregateCall;
	public abstract fun relCorrelate (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelCorrelate;
	public abstract fun relCorrelate (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/RelJoinType;)Lorg/partiql/plan/v1/operator/rel/RelCorrelate;
	public abstract fun relDistinct (Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelDistinct;
	public abstract fun relExcept (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelExcept;
	public abstract fun relExcept (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;Z)Lorg/partiql/plan/v1/operator/rel/RelExcept;
	public abstract fun relExclude (Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExclude;
	public abstract fun relFilter (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelFilter;
	public abstract fun relIntersect (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelIntersect;
	public abstract fun relIntersect (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;Z)Lorg/partiql/plan/v1/operator/rel/RelIntersect;
	public abstract fun relIterate (Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelIterate;
	public abstract fun relJoin (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelJoin;
	public abstract fun relJoin (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rel/RelJoinType;Lorg/partiql/plan/v1/Schema;Lorg/partiql/plan/v1/Schema;)Lorg/partiql/plan/v1/operator/rel/RelJoin;
	public abstract fun relLimit (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelLimit;
	public abstract fun relOffset (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelOffset;
	public abstract fun relProject (Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelProject;
	public abstract fun relScan (Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelScan;
	public abstract fun relSort (Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelSort;
	public abstract fun relUnion (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelUnion;
	public abstract fun relUnion (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;Z)Lorg/partiql/plan/v1/operator/rel/RelUnion;
	public abstract fun relUnpivot (Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelUnpivot;
	public abstract fun rexArray (Ljava/util/Collection;)Lorg/partiql/plan/v1/operator/rex/RexArray;
	public abstract fun rexBag (Ljava/util/Collection;)Lorg/partiql/plan/v1/operator/rex/RexBag;
	public abstract fun rexCall (Lorg/partiql/spi/function/Function$Instance;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexCall;
	public abstract fun rexCallDynamic (Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexCallDynamic;
	public abstract fun rexCase (Ljava/util/List;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexCase;
	public abstract fun rexCase (Lorg/partiql/plan/v1/operator/rex/Rex;Ljava/util/List;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexCase;
	public abstract fun rexCast (Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/types/PType;)Lorg/partiql/plan/v1/operator/rex/RexCast;
	public abstract fun rexCoalesce (Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexCoalesce;
	public abstract fun rexError (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexError;
	public abstract fun rexLit (Lorg/partiql/spi/value/Datum;)Lorg/partiql/plan/v1/operator/rex/RexLit;
	public abstract fun rexMissing (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexMissing;
	public abstract fun rexNullIf (Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexNullIf;
	public abstract fun rexPathIndex (Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexPathIndex;
	public abstract fun rexPathKey (Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexPathKey;
	public abstract fun rexPathSymbol (Lorg/partiql/plan/v1/operator/rex/Rex;Ljava/lang/String;)Lorg/partiql/plan/v1/operator/rex/RexPathSymbol;
	public abstract fun rexPivot (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexPivot;
	public abstract fun rexSelect (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexSelect;
	public abstract fun rexSpread (Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexSpread;
	public abstract fun rexStruct (Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexStruct;
	public abstract fun rexSubquery (Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;Z)Lorg/partiql/plan/v1/operator/rex/RexSubquery;
	public abstract fun rexSubqueryComp (Ljava/util/List;Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp;
	public abstract fun rexSubqueryComp (Ljava/util/List;Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Quantifier;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp;
	public abstract fun rexSubqueryIn (Ljava/util/List;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryIn;
	public abstract fun rexSubqueryIn (Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryIn;
	public abstract fun rexSubqueryTest (Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest$Test;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest;
	public abstract fun rexTable (Lorg/partiql/spi/catalog/Table;)Lorg/partiql/plan/v1/operator/rex/RexTable;
	public abstract fun rexVar (II)Lorg/partiql/plan/v1/operator/rex/RexVar;
}

public final class org/partiql/plan/v1/builder/PlanFactory$Companion {
	public final fun getSTANDARD ()Lorg/partiql/plan/v1/builder/PlanFactory;
}

public final class org/partiql/plan/v1/builder/PlanFactory$DefaultImpls {
	public static fun relAggregate (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelAggregate;
	public static fun relAggregateCall (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/spi/function/Aggregation;Ljava/util/List;Z)Lorg/partiql/plan/v1/operator/rel/RelAggregateCall;
	public static synthetic fun relAggregateCall$default (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/spi/function/Aggregation;Ljava/util/List;ZILjava/lang/Object;)Lorg/partiql/plan/v1/operator/rel/RelAggregateCall;
	public static fun relCorrelate (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelCorrelate;
	public static fun relCorrelate (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/RelJoinType;)Lorg/partiql/plan/v1/operator/rel/RelCorrelate;
	public static fun relDistinct (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelDistinct;
	public static fun relExcept (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelExcept;
	public static fun relExcept (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;Z)Lorg/partiql/plan/v1/operator/rel/RelExcept;
	public static fun relExclude (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExclude;
	public static fun relFilter (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelFilter;
	public static fun relIntersect (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelIntersect;
	public static fun relIntersect (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;Z)Lorg/partiql/plan/v1/operator/rel/RelIntersect;
	public static fun relIterate (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelIterate;
	public static fun relJoin (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelJoin;
	public static fun relJoin (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rel/RelJoinType;Lorg/partiql/plan/v1/Schema;Lorg/partiql/plan/v1/Schema;)Lorg/partiql/plan/v1/operator/rel/RelJoin;
	public static synthetic fun relJoin$default (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rel/RelJoinType;Lorg/partiql/plan/v1/Schema;Lorg/partiql/plan/v1/Schema;ILjava/lang/Object;)Lorg/partiql/plan/v1/operator/rel/RelJoin;
	public static fun relLimit (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelLimit;
	public static fun relOffset (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelOffset;
	public static fun relProject (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelProject;
	public static fun relScan (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelScan;
	public static fun relSort (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelSort;
	public static fun relUnion (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rel/RelUnion;
	public static fun relUnion (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rel/Rel;Z)Lorg/partiql/plan/v1/operator/rel/RelUnion;
	public static fun relUnpivot (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rel/RelUnpivot;
	public static fun rexArray (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/util/Collection;)Lorg/partiql/plan/v1/operator/rex/RexArray;
	public static fun rexBag (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/util/Collection;)Lorg/partiql/plan/v1/operator/rex/RexBag;
	public static fun rexCall (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/spi/function/Function$Instance;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexCall;
	public static fun rexCallDynamic (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexCallDynamic;
	public static fun rexCase (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/util/List;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexCase;
	public static fun rexCase (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rex/Rex;Ljava/util/List;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexCase;
	public static fun rexCast (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/types/PType;)Lorg/partiql/plan/v1/operator/rex/RexCast;
	public static fun rexCoalesce (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexCoalesce;
	public static fun rexError (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexError;
	public static fun rexLit (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/spi/value/Datum;)Lorg/partiql/plan/v1/operator/rex/RexLit;
	public static fun rexMissing (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexMissing;
	public static fun rexNullIf (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexNullIf;
	public static fun rexPathIndex (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexPathIndex;
	public static fun rexPathKey (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexPathKey;
	public static fun rexPathSymbol (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rex/Rex;Ljava/lang/String;)Lorg/partiql/plan/v1/operator/rex/RexPathSymbol;
	public static fun rexPivot (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexPivot;
	public static fun rexSelect (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;)Lorg/partiql/plan/v1/operator/rex/RexSelect;
	public static fun rexSpread (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexSpread;
	public static fun rexStruct (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rex/RexStruct;
	public static fun rexSubquery (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rel/Rel;Lorg/partiql/plan/v1/operator/rex/Rex;Z)Lorg/partiql/plan/v1/operator/rex/RexSubquery;
	public static fun rexSubqueryComp (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/util/List;Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp;
	public static fun rexSubqueryComp (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/util/List;Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Quantifier;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp;
	public static fun rexSubqueryIn (Lorg/partiql/plan/v1/builder/PlanFactory;Ljava/util/List;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryIn;
	public static fun rexSubqueryIn (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryIn;
	public static fun rexSubqueryTest (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest$Test;Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest;
	public static fun rexTable (Lorg/partiql/plan/v1/builder/PlanFactory;Lorg/partiql/spi/catalog/Table;)Lorg/partiql/plan/v1/operator/rex/RexTable;
	public static fun rexVar (Lorg/partiql/plan/v1/builder/PlanFactory;II)Lorg/partiql/plan/v1/operator/rex/RexVar;
}

public final class org/partiql/plan/v1/builder/RelBuilder {
	public static final field Companion Lorg/partiql/plan/v1/builder/RelBuilder$Companion;
	public synthetic fun <init> (Lorg/partiql/plan/v1/builder/RelBuilder$Builder;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun aggregate (Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun build ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public final fun build (Lorg/partiql/plan/v1/builder/PlanFactory;)Lorg/partiql/plan/v1/operator/rel/Rel;
	public final fun distinct ()Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun except (Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun exclude (Ljava/util/List;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun filter (Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun intersect (Lorg/partiql/plan/v1/builder/RelBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public static final fun iterate (Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun join (Lorg/partiql/plan/v1/builder/RelBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun join (Lorg/partiql/plan/v1/builder/RelBuilder;Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun join (Lorg/partiql/plan/v1/builder/RelBuilder;Lorg/partiql/plan/v1/builder/RexBuilder;Lorg/partiql/plan/v1/operator/rel/RelJoinType;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun join (Lorg/partiql/plan/v1/builder/RelBuilder;Lorg/partiql/plan/v1/operator/rel/RelJoinType;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun limit (Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun offset (Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun pivot (Lorg/partiql/plan/v1/builder/RexBuilder;Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun project (Ljava/util/List;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public static final fun scan (Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun select (Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun sort (Ljava/util/List;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun union (Lorg/partiql/plan/v1/operator/rel/Rel;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public static final fun unpivot (Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
}

public final class org/partiql/plan/v1/builder/RelBuilder$Companion {
	public final fun iterate (Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun scan (Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
	public final fun unpivot (Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RelBuilder;
}

public final class org/partiql/plan/v1/builder/RexBuilder {
	public static final field Companion Lorg/partiql/plan/v1/builder/RexBuilder$Companion;
	public synthetic fun <init> (Lorg/partiql/plan/v1/builder/RexBuilder$Builder;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun array (Ljava/util/Collection;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun bag (Ljava/util/Collection;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun build ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public final fun build (Lorg/partiql/plan/v1/builder/PlanFactory;)Lorg/partiql/plan/v1/operator/rex/Rex;
	public final fun cast (Lorg/partiql/types/PType;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun coalesce (Ljava/util/List;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun col (II)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun exists (Lorg/partiql/plan/v1/builder/RelBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun iterate ()Lorg/partiql/plan/v1/builder/RelBuilder;
	public static final fun lit (I)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun lit (J)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun lit (Ljava/lang/String;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun lit (Lorg/partiql/spi/value/Datum;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun lit (Z)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun pivot (Lorg/partiql/plan/v1/builder/RelBuilder;Lorg/partiql/plan/v1/builder/RexBuilder;Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun scan ()Lorg/partiql/plan/v1/builder/RelBuilder;
	public static final fun select (Lorg/partiql/plan/v1/builder/RelBuilder;Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun spread (Ljava/util/List;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun struct (Ljava/util/List;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun subquery (Lorg/partiql/plan/v1/builder/RelBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public static final fun unique (Lorg/partiql/plan/v1/builder/RelBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun unpivot ()Lorg/partiql/plan/v1/builder/RelBuilder;
}

public final class org/partiql/plan/v1/builder/RexBuilder$Companion {
	public final fun array (Ljava/util/Collection;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun bag (Ljava/util/Collection;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun coalesce (Ljava/util/List;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun col (II)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun exists (Lorg/partiql/plan/v1/builder/RelBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun lit (I)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun lit (J)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun lit (Ljava/lang/String;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun lit (Lorg/partiql/spi/value/Datum;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun lit (Z)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun pivot (Lorg/partiql/plan/v1/builder/RelBuilder;Lorg/partiql/plan/v1/builder/RexBuilder;Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun select (Lorg/partiql/plan/v1/builder/RelBuilder;Lorg/partiql/plan/v1/builder/RexBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun spread (Ljava/util/List;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun struct (Ljava/util/List;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun subquery (Lorg/partiql/plan/v1/builder/RelBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
	public final fun unique (Lorg/partiql/plan/v1/builder/RelBuilder;)Lorg/partiql/plan/v1/builder/RexBuilder;
}

public abstract interface class org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelAggregate : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getCalls ()Ljava/util/List;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getGroups ()Ljava/util/List;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelAggregate$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelAggregate;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelAggregate;)Ljava/util/Collection;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelAggregate;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelAggregateCall {
	public abstract fun getAgg ()Lorg/partiql/spi/function/Aggregation;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun isDistinct ()Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelCollation {
	public abstract fun getNulls ()Lorg/partiql/plan/v1/operator/rel/RelCollation$Nulls;
	public abstract fun getOrder ()Lorg/partiql/plan/v1/operator/rel/RelCollation$Order;
	public abstract fun getRex ()Lorg/partiql/plan/v1/operator/rex/Rex;
}

public final class org/partiql/plan/v1/operator/rel/RelCollation$Nulls : java/lang/Enum {
	public static final field FIRST Lorg/partiql/plan/v1/operator/rel/RelCollation$Nulls;
	public static final field LAST Lorg/partiql/plan/v1/operator/rel/RelCollation$Nulls;
	public static final field OTHER Lorg/partiql/plan/v1/operator/rel/RelCollation$Nulls;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/v1/operator/rel/RelCollation$Nulls;
	public static fun values ()[Lorg/partiql/plan/v1/operator/rel/RelCollation$Nulls;
}

public final class org/partiql/plan/v1/operator/rel/RelCollation$Order : java/lang/Enum {
	public static final field ASC Lorg/partiql/plan/v1/operator/rel/RelCollation$Order;
	public static final field DESC Lorg/partiql/plan/v1/operator/rel/RelCollation$Order;
	public static final field OTHER Lorg/partiql/plan/v1/operator/rel/RelCollation$Order;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/v1/operator/rel/RelCollation$Order;
	public static fun values ()[Lorg/partiql/plan/v1/operator/rel/RelCollation$Order;
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelCorrelate : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getJoinType ()Lorg/partiql/plan/v1/operator/rel/RelJoinType;
	public abstract fun getLeft ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelCorrelate$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelCorrelate;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelCorrelate;)Ljava/util/Collection;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelCorrelate;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelDistinct : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelDistinct$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelDistinct;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelDistinct;)Ljava/util/Collection;
	public static fun getSchema (Lorg/partiql/plan/v1/operator/rel/RelDistinct;)Lorg/partiql/plan/v1/Schema;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelDistinct;)Z
}

public final class org/partiql/plan/v1/operator/rel/RelError : org/partiql/plan/v1/operator/rel/Rel {
	public fun <init> (Ljava/lang/String;)V
	public fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getChildren ()Ljava/util/Collection;
	public final fun getMessage ()Ljava/lang/String;
	public fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public fun isOrdered ()Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelExcept : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getLeft ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun isAll ()Z
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelExcept$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelExcept;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelExcept;)Ljava/util/Collection;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelExcept;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelExclude : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getPaths ()Ljava/util/List;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelExclude$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelExclude;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelExclude;)Ljava/util/Collection;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelExclude;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelExcludeCollectionWildcard : org/partiql/plan/v1/operator/rel/RelExcludeStep {
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelExcludeIndex : org/partiql/plan/v1/operator/rel/RelExcludeStep {
	public abstract fun getIndex ()I
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelExcludeKey : org/partiql/plan/v1/operator/rel/RelExcludeStep {
	public abstract fun getKey ()Ljava/lang/String;
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelExcludePath {
	public static final field Companion Lorg/partiql/plan/v1/operator/rel/RelExcludePath$Companion;
	public abstract fun getRoot ()Lorg/partiql/plan/v1/operator/rex/RexVar;
	public abstract fun getSteps ()Ljava/util/Collection;
	public static fun of (Lorg/partiql/plan/v1/operator/rex/RexVar;Ljava/util/Collection;)Lorg/partiql/plan/v1/operator/rel/RelExcludePath;
}

public final class org/partiql/plan/v1/operator/rel/RelExcludePath$Companion {
	public final fun of (Lorg/partiql/plan/v1/operator/rex/RexVar;Ljava/util/Collection;)Lorg/partiql/plan/v1/operator/rel/RelExcludePath;
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelExcludeStep {
	public static final field Companion Lorg/partiql/plan/v1/operator/rel/RelExcludeStep$Companion;
	public static fun collection (Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExcludeCollectionWildcard;
	public abstract fun getSubsteps ()Ljava/util/Collection;
	public static fun index (ILjava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExcludeIndex;
	public static fun key (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExcludeKey;
	public static fun struct (Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExcludeStructWildcard;
	public static fun symbol (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExcludeSymbol;
}

public final class org/partiql/plan/v1/operator/rel/RelExcludeStep$Companion {
	public final fun collection (Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExcludeCollectionWildcard;
	public static synthetic fun collection$default (Lorg/partiql/plan/v1/operator/rel/RelExcludeStep$Companion;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/v1/operator/rel/RelExcludeCollectionWildcard;
	public final fun index (ILjava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExcludeIndex;
	public static synthetic fun index$default (Lorg/partiql/plan/v1/operator/rel/RelExcludeStep$Companion;ILjava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/v1/operator/rel/RelExcludeIndex;
	public final fun key (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExcludeKey;
	public static synthetic fun key$default (Lorg/partiql/plan/v1/operator/rel/RelExcludeStep$Companion;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/v1/operator/rel/RelExcludeKey;
	public final fun struct (Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExcludeStructWildcard;
	public static synthetic fun struct$default (Lorg/partiql/plan/v1/operator/rel/RelExcludeStep$Companion;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/v1/operator/rel/RelExcludeStructWildcard;
	public final fun symbol (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/v1/operator/rel/RelExcludeSymbol;
	public static synthetic fun symbol$default (Lorg/partiql/plan/v1/operator/rel/RelExcludeStep$Companion;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/v1/operator/rel/RelExcludeSymbol;
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelExcludeStructWildcard : org/partiql/plan/v1/operator/rel/RelExcludeStep {
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelExcludeSymbol : org/partiql/plan/v1/operator/rel/RelExcludeStep {
	public abstract fun getSymbol ()Ljava/lang/String;
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelFilter : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getPredicate ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelFilter$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelFilter;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelFilter;)Ljava/util/Collection;
	public static fun getSchema (Lorg/partiql/plan/v1/operator/rel/RelFilter;)Lorg/partiql/plan/v1/Schema;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelFilter;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelIntersect : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getLeft ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun isAll ()Z
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelIntersect$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelIntersect;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelIntersect;)Ljava/util/Collection;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelIntersect;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelIterate : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelIterate$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelIterate;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelIterate;)Ljava/util/Collection;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelIterate;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelJoin : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getCondition ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getJoinType ()Lorg/partiql/plan/v1/operator/rel/RelJoinType;
	public abstract fun getLeft ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getLeftSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun getRight ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getRightSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelJoin$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelJoin;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelJoin;)Ljava/util/Collection;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelJoin;)Z
}

public final class org/partiql/plan/v1/operator/rel/RelJoinType : java/lang/Enum {
	public static final field FULL Lorg/partiql/plan/v1/operator/rel/RelJoinType;
	public static final field INNER Lorg/partiql/plan/v1/operator/rel/RelJoinType;
	public static final field LEFT Lorg/partiql/plan/v1/operator/rel/RelJoinType;
	public static final field RIGHT Lorg/partiql/plan/v1/operator/rel/RelJoinType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/v1/operator/rel/RelJoinType;
	public static fun values ()[Lorg/partiql/plan/v1/operator/rel/RelJoinType;
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelLimit : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getLimit ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelLimit$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelLimit;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelLimit;)Ljava/util/Collection;
	public static fun getSchema (Lorg/partiql/plan/v1/operator/rel/RelLimit;)Lorg/partiql/plan/v1/Schema;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelLimit;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelOffset : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getOffset ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelOffset$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelOffset;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelOffset;)Ljava/util/Collection;
	public static fun getSchema (Lorg/partiql/plan/v1/operator/rel/RelOffset;)Lorg/partiql/plan/v1/Schema;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelOffset;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelProject : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getProjections ()Ljava/util/List;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelProject$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelProject;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelProject;)Ljava/util/Collection;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelProject;)Z
}

public final class org/partiql/plan/v1/operator/rel/RelProjectImpl : org/partiql/plan/v1/operator/rel/RelProject {
	public fun <init> (Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/Collection;
	public fun getInput ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public fun getProjections ()Ljava/util/List;
	public fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelScan : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelScan$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelScan;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelScan;)Ljava/util/Collection;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelScan;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelSort : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getCollations ()Ljava/util/List;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelSort$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelSort;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelSort;)Ljava/util/Collection;
	public static fun getSchema (Lorg/partiql/plan/v1/operator/rel/RelSort;)Lorg/partiql/plan/v1/Schema;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelSort;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelUnion : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getLeft ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun isAll ()Z
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelUnion$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelUnion;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelUnion;)Ljava/util/Collection;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelUnion;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelUnpivot : org/partiql/plan/v1/operator/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun isOrdered ()Z
}

public final class org/partiql/plan/v1/operator/rel/RelUnpivot$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rel/RelUnpivot;Lorg/partiql/plan/v1/operator/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rel/RelUnpivot;)Ljava/util/Collection;
	public static fun isOrdered (Lorg/partiql/plan/v1/operator/rel/RelUnpivot;)Z
}

public abstract interface class org/partiql/plan/v1/operator/rel/RelVisitor {
	public abstract fun defaultReturn (Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun defaultVisit (Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visit (Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitAggregate (Lorg/partiql/plan/v1/operator/rel/RelAggregate;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCorrelate (Lorg/partiql/plan/v1/operator/rel/RelCorrelate;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitDistinct (Lorg/partiql/plan/v1/operator/rel/RelDistinct;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitError (Lorg/partiql/plan/v1/operator/rel/RelError;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitExcept (Lorg/partiql/plan/v1/operator/rel/RelExcept;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitExclude (Lorg/partiql/plan/v1/operator/rel/RelExclude;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitFilter (Lorg/partiql/plan/v1/operator/rel/RelFilter;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitIntersect (Lorg/partiql/plan/v1/operator/rel/RelIntersect;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitIterate (Lorg/partiql/plan/v1/operator/rel/RelIterate;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitJoin (Lorg/partiql/plan/v1/operator/rel/RelJoin;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitLimit (Lorg/partiql/plan/v1/operator/rel/RelLimit;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitOffset (Lorg/partiql/plan/v1/operator/rel/RelOffset;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitProject (Lorg/partiql/plan/v1/operator/rel/RelProject;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitScan (Lorg/partiql/plan/v1/operator/rel/RelScan;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitSort (Lorg/partiql/plan/v1/operator/rel/RelSort;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitUnion (Lorg/partiql/plan/v1/operator/rel/RelUnion;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitUnpivot (Lorg/partiql/plan/v1/operator/rel/RelUnpivot;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/v1/operator/rel/RelVisitor$DefaultImpls {
	public static fun defaultVisit (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visit (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitAggregate (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelAggregate;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitCorrelate (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelCorrelate;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitDistinct (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelDistinct;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitError (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelError;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitExcept (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelExcept;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitExclude (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelExclude;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitFilter (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelFilter;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitIntersect (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelIntersect;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitIterate (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelIterate;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitJoin (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelJoin;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitLimit (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelLimit;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitOffset (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelOffset;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitProject (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelProject;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitScan (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelScan;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitSort (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelSort;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitUnion (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelUnion;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitUnpivot (Lorg/partiql/plan/v1/operator/rel/RelVisitor;Lorg/partiql/plan/v1/operator/rel/RelUnpivot;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getType ()Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexArray : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getValues ()Ljava/util/Collection;
}

public final class org/partiql/plan/v1/operator/rex/RexArray$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexArray;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexArray;)Ljava/util/Collection;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexBag : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getValues ()Ljava/util/Collection;
}

public final class org/partiql/plan/v1/operator/rex/RexBag$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexBag;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexBag;)Ljava/util/Collection;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexCall : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getFunction ()Lorg/partiql/spi/function/Function$Instance;
}

public final class org/partiql/plan/v1/operator/rex/RexCall$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexCall;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexCall;)Ljava/util/Collection;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexCallDynamic : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getFunctions ()Ljava/util/List;
	public abstract fun getName ()Ljava/lang/String;
}

public final class org/partiql/plan/v1/operator/rex/RexCallDynamic$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexCallDynamic;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexCallDynamic;)Ljava/util/Collection;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexCase : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getBranches ()Ljava/util/List;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getDefault ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getMatch ()Lorg/partiql/plan/v1/operator/rex/Rex;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexCase$Branch {
	public abstract fun getCondition ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getResult ()Lorg/partiql/plan/v1/operator/rex/Rex;
}

public final class org/partiql/plan/v1/operator/rex/RexCase$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexCase;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexCase;)Ljava/util/Collection;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexCast : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getOperand ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getTarget ()Lorg/partiql/types/PType;
}

public final class org/partiql/plan/v1/operator/rex/RexCast$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexCast;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexCast;)Ljava/util/Collection;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexCoalesce : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getChildren ()Ljava/util/Collection;
}

public final class org/partiql/plan/v1/operator/rex/RexCoalesce$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexCoalesce;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexCoalesce;)Ljava/util/Collection;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexError : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getMessage ()Ljava/lang/String;
	public abstract fun getTrace ()Ljava/util/List;
	public abstract fun getType ()Lorg/partiql/types/PType;
}

public final class org/partiql/plan/v1/operator/rex/RexError$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexError;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexError;)Ljava/util/Collection;
	public static fun getType (Lorg/partiql/plan/v1/operator/rex/RexError;)Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexLit : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getType ()Lorg/partiql/types/PType;
	public abstract fun getValue ()Lorg/partiql/spi/value/Datum;
}

public final class org/partiql/plan/v1/operator/rex/RexLit$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexLit;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexLit;)Ljava/util/Collection;
	public static fun getType (Lorg/partiql/plan/v1/operator/rex/RexLit;)Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexMissing : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getMessage ()Ljava/lang/String;
	public abstract fun getTrace ()Ljava/util/List;
	public abstract fun getType ()Lorg/partiql/types/PType;
}

public final class org/partiql/plan/v1/operator/rex/RexMissing$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexMissing;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexMissing;)Ljava/util/Collection;
	public static fun getType (Lorg/partiql/plan/v1/operator/rex/RexMissing;)Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexNullIf : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getNullifier ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getType ()Lorg/partiql/types/PType;
	public abstract fun getValue ()Lorg/partiql/plan/v1/operator/rex/Rex;
}

public final class org/partiql/plan/v1/operator/rex/RexNullIf$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexNullIf;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexNullIf;)Ljava/util/Collection;
	public static fun getType (Lorg/partiql/plan/v1/operator/rex/RexNullIf;)Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexPathIndex : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getIndex ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getOperand ()Lorg/partiql/plan/v1/operator/rex/Rex;
}

public final class org/partiql/plan/v1/operator/rex/RexPathIndex$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexPathIndex;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexPathKey : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getKey ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getOperand ()Lorg/partiql/plan/v1/operator/rex/Rex;
}

public final class org/partiql/plan/v1/operator/rex/RexPathKey$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexPathKey;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexPathSymbol : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getOperand ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getSymbol ()Ljava/lang/String;
}

public final class org/partiql/plan/v1/operator/rex/RexPathSymbol$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexPathSymbol;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexPivot : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getKey ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getType ()Lorg/partiql/types/PType;
	public abstract fun getValue ()Lorg/partiql/plan/v1/operator/rex/Rex;
}

public final class org/partiql/plan/v1/operator/rex/RexPivot$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexPivot;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexPivot;)Ljava/util/Collection;
	public static fun getType (Lorg/partiql/plan/v1/operator/rex/RexPivot;)Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexSelect : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getConstructor ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getInput ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getType ()Lorg/partiql/types/PType;
}

public final class org/partiql/plan/v1/operator/rex/RexSelect$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexSelect;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexSelect;)Ljava/util/Collection;
	public static fun getType (Lorg/partiql/plan/v1/operator/rex/RexSelect;)Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexSpread : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getType ()Lorg/partiql/types/PType;
}

public final class org/partiql/plan/v1/operator/rex/RexSpread$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexSpread;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexSpread;)Ljava/util/Collection;
	public static fun getType (Lorg/partiql/plan/v1/operator/rex/RexSpread;)Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexStruct : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getFields ()Ljava/util/List;
	public abstract fun getType ()Lorg/partiql/types/PType;
}

public final class org/partiql/plan/v1/operator/rex/RexStruct$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexStruct;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexStruct;)Ljava/util/Collection;
	public static fun getType (Lorg/partiql/plan/v1/operator/rex/RexStruct;)Lorg/partiql/types/PType;
}

public final class org/partiql/plan/v1/operator/rex/RexStruct$Field {
	public fun <init> (Lorg/partiql/plan/v1/operator/rex/Rex;Lorg/partiql/plan/v1/operator/rex/Rex;)V
	public final fun getKey ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public final fun getValue ()Lorg/partiql/plan/v1/operator/rex/Rex;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexSubquery : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun asScalar ()Z
	public abstract fun getConstructor ()Lorg/partiql/plan/v1/operator/rex/Rex;
	public abstract fun getRel ()Lorg/partiql/plan/v1/operator/rel/Rel;
}

public final class org/partiql/plan/v1/operator/rex/RexSubquery$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexSubquery;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexSubqueryComp : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getComp ()Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;
	public abstract fun getQuantifier ()Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Quantifier;
	public abstract fun getRel ()Lorg/partiql/plan/v1/operator/rel/Rel;
}

public final class org/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp : java/lang/Enum {
	public static final field EQ Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;
	public static final field GE Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;
	public static final field GT Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;
	public static final field LE Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;
	public static final field LT Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;
	public static final field NE Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;
	public static final field OTHER Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;
	public static fun values ()[Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Comp;
}

public final class org/partiql/plan/v1/operator/rex/RexSubqueryComp$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/v1/operator/rex/RexSubqueryComp$Quantifier : java/lang/Enum {
	public static final field ALL Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Quantifier;
	public static final field ANY Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Quantifier;
	public static final field OTHER Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Quantifier;
	public static final field SOME Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Quantifier;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Quantifier;
	public static fun values ()[Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp$Quantifier;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexSubqueryIn : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getRel ()Lorg/partiql/plan/v1/operator/rel/Rel;
}

public final class org/partiql/plan/v1/operator/rex/RexSubqueryIn$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexSubqueryIn;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexSubqueryTest : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getRel ()Lorg/partiql/plan/v1/operator/rel/Rel;
	public abstract fun getTest ()Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest$Test;
}

public final class org/partiql/plan/v1/operator/rex/RexSubqueryTest$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/v1/operator/rex/RexSubqueryTest$Test : java/lang/Enum {
	public static final field EXISTS Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest$Test;
	public static final field OTHER Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest$Test;
	public static final field UNIQUE Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest$Test;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest$Test;
	public static fun values ()[Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest$Test;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexTable : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getTable ()Lorg/partiql/spi/catalog/Table;
}

public final class org/partiql/plan/v1/operator/rex/RexTable$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexTable;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexTable;)Ljava/util/Collection;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexVar : org/partiql/plan/v1/operator/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/Collection;
	public abstract fun getDepth ()I
	public abstract fun getOffset ()I
}

public final class org/partiql/plan/v1/operator/rex/RexVar$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/operator/rex/RexVar;Lorg/partiql/plan/v1/operator/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getChildren (Lorg/partiql/plan/v1/operator/rex/RexVar;)Ljava/util/Collection;
}

public abstract interface class org/partiql/plan/v1/operator/rex/RexVisitor {
	public abstract fun defaultReturn (Lorg/partiql/plan/v1/operator/rex/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun defaultVisit (Lorg/partiql/plan/v1/operator/rex/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visit (Lorg/partiql/plan/v1/operator/rex/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitArray (Lorg/partiql/plan/v1/operator/rex/RexArray;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitBag (Lorg/partiql/plan/v1/operator/rex/RexBag;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCall (Lorg/partiql/plan/v1/operator/rex/RexCall;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCallDynamic (Lorg/partiql/plan/v1/operator/rex/RexCallDynamic;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCase (Lorg/partiql/plan/v1/operator/rex/RexCase;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCast (Lorg/partiql/plan/v1/operator/rex/RexCast;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCoalesce (Lorg/partiql/plan/v1/operator/rex/RexCoalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitError (Lorg/partiql/plan/v1/operator/rex/RexError;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitLit (Lorg/partiql/plan/v1/operator/rex/RexLit;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitMissing (Lorg/partiql/plan/v1/operator/rex/RexMissing;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitNullIf (Lorg/partiql/plan/v1/operator/rex/RexNullIf;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitPathIndex (Lorg/partiql/plan/v1/operator/rex/RexPathIndex;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitPathKey (Lorg/partiql/plan/v1/operator/rex/RexPathKey;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitPathSymbol (Lorg/partiql/plan/v1/operator/rex/RexPathSymbol;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitPivot (Lorg/partiql/plan/v1/operator/rex/RexPivot;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitSelect (Lorg/partiql/plan/v1/operator/rex/RexSelect;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitSpread (Lorg/partiql/plan/v1/operator/rex/RexSpread;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitStruct (Lorg/partiql/plan/v1/operator/rex/RexStruct;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitSubquery (Lorg/partiql/plan/v1/operator/rex/RexSubquery;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitSubqueryComp (Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitSubqueryIn (Lorg/partiql/plan/v1/operator/rex/RexSubqueryIn;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitSubqueryTest (Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitTable (Lorg/partiql/plan/v1/operator/rex/RexTable;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitVar (Lorg/partiql/plan/v1/operator/rex/RexVar;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/v1/operator/rex/RexVisitor$DefaultImpls {
	public static fun defaultVisit (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visit (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitArray (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexArray;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitBag (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexBag;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitCall (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexCall;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitCallDynamic (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexCallDynamic;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitCase (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexCase;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitCast (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexCast;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitCoalesce (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexCoalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitError (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexError;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitLit (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexLit;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitMissing (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexMissing;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitNullIf (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexNullIf;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitPathIndex (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexPathIndex;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitPathKey (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexPathKey;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitPathSymbol (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexPathSymbol;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitPivot (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexPivot;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitSelect (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexSelect;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitSpread (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexSpread;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitStruct (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexStruct;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitSubquery (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexSubquery;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitSubqueryComp (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexSubqueryComp;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitSubqueryIn (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexSubqueryIn;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitSubqueryTest (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexSubqueryTest;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitTable (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexTable;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitVar (Lorg/partiql/plan/v1/operator/rex/RexVisitor;Lorg/partiql/plan/v1/operator/rex/RexVar;Ljava/lang/Object;)Ljava/lang/Object;
}

